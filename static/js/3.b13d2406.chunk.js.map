{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","Dialog","dialog","dialogImg","alt","src","img","to","id","activeClassName","active","name","AddMessageReduxForm","reduxForm","form","messageInp","onSubmit","handleSubmit","Field","placeholder","component","Dialogs","messages","state","DialogsElements","dialogs","map","MessagesElements","isAuth","dialogItems","formData","sendMessage","mapStateToPropswithRedirect","auth","compose","connect","dialogsPage","dispatch","text","SendMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,UAAY,6B,qFCapMC,EAXC,SAACC,GACb,OACI,qBAAKC,UAAWC,IAAEC,QAAlB,SAA4BH,EAAMG,W,QCU3BC,EAXA,SAACJ,GACZ,OACI,sBAAKC,UAAWC,IAAEG,OAAlB,UAA0B,qBAAKJ,UAAWC,IAAEI,UAAUC,IAAM,GAAGC,IAAKR,EAAMS,MAAM,cAAC,IAAD,CAASC,GAAE,mBAAcV,EAAMW,IAAMC,gBAAiBV,IAAEW,OAAxD,SAAiEb,EAAMc,W,0BCUzJC,EAAsBC,YAAU,CAClCC,KAAK,cADmBD,EARL,SAAChB,GACpB,OACI,uBAAMC,UAAWC,IAAEgB,WAAYC,SAAUnB,EAAMoB,aAA/C,UACI,cAACC,EAAA,EAAD,CAAOC,YAAY,gBAAgBC,UAAU,QAAQT,KAAK,YAC1D,gDA2CGU,EAnCC,SAACxB,GAEb,IAAMyB,EAAWzB,EAAM0B,MAAMD,SAIzBE,EAHY3B,EAAM0B,MAAME,QAGEC,KAAI,SAACxB,GAAD,OAAW,cAAC,EAAD,CAAQI,IAAKJ,EAAOI,IAAqBK,KAAOT,EAAOS,KAAMH,GAAIN,EAAOM,IAA1CN,EAAOM,OAE9EmB,EAAmBL,EAASI,KAAI,SAAC1B,GAAD,OAAW,cAAC,EAAD,CAAyBA,QAASA,EAAQA,SAA5BA,EAAQQ,OAWrE,OAAIX,EAAM+B,OAEN,sBAAK9B,UAAWC,IAAE0B,QAAlB,UACI,qBAAK3B,UAAWC,IAAE8B,YAAlB,SAEKL,IAGL,sBAAK1B,UAAWC,IAAEuB,SAAlB,UACKK,EACD,cAACf,EAAD,CAAqBI,SAlBjB,SAACc,GACbjC,EAAMkC,YAAYD,EAAS9B,SAC3B8B,EAAS9B,QAAQ,YAMI,cAAC,IAAD,CAAUO,GAAI,Y,+DCnCvCyB,EAA8B,SAACT,GAAD,MAAY,CAC1CK,OAAQL,EAAMU,KAAKL,SCyBRM,sBAAQC,aApBC,SAACZ,GACrB,MAAO,CACHA,MAAMA,EAAMa,gBAIO,SAACC,GACxB,MAAO,CAEHN,YAAY,SAACO,GACTD,EAASE,YAAyBD,UDZd,SAACE,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAK7C,MAAM+B,OACT,cAACY,EAAD,eAAeE,KAAK7C,QADI,cAAC,IAAD,CAAUU,GAAG,eAHT,GACXoC,IAAMH,WAUtC,OAHqCL,YAAQH,EAARG,CACjCM,KCaOP,CAAsEb","file":"static/js/3.b13d2406.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__k96on\",\"dialogItems\":\"Dialogs_dialogItems__3dGcL\",\"dialog\":\"Dialogs_dialog__2fWKI\",\"active\":\"Dialogs_active__zSkpW\",\"messages\":\"Dialogs_messages__xg0LO\",\"dialogImg\":\"Dialogs_dialogImg__1riEG\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) =>{\r\n    return(\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Dialog = (props) =>{\r\n    return(\r\n        <div className={s.dialog}><img className={s.dialogImg}alt = '' src={props.img}/><NavLink to={`/dialogs/${props.id}`} activeClassName={s.active}>{props.name}</NavLink></div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Dialog;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport Dialog from './DialogItem/DialogItem';\r\nimport { Redirect } from 'react-router';\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\n\r\nconst AddMessageForm = (props)=>{\r\n    return(\r\n        <form className={s.messageInp} onSubmit={props.handleSubmit}>\r\n            <Field placeholder='Enter message' component='input' name='message'></Field>\r\n            <button >Send</button>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageReduxForm = reduxForm({\r\n    form:'addMessage'\r\n  })(AddMessageForm)\r\n \r\nconst Dialogs = (props) => {\r\n    \r\n    const messages = props.state.messages\r\n    const dialogs = props.state.dialogs\r\n\r\n\r\n    let DialogsElements = dialogs.map((dialog)=> <Dialog img={dialog.img}key ={dialog.id} name= {dialog.name} id={dialog.id}/>)\r\n\r\n    let MessagesElements = messages.map((message)=><Message key={message.id}message={message.message}/>)\r\n\r\n\r\n    let sendMessage=(formData)=>{\r\n        props.sendMessage(formData.message)\r\n        formData.message=''\r\n    }\r\n      \r\n    \r\n\r\n\r\n    if(!props.isAuth) return <Redirect to={'/login'}/>\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n\r\n                {DialogsElements}\r\n               \r\n            </div>\r\n            <div className={s.messages}>\r\n                {MessagesElements}\r\n                <AddMessageReduxForm onSubmit={sendMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropswithRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropswithRedirect)(\r\n        RedirectComponent\r\n    );\r\n    return ConnectedAuthRedirectComponent;\r\n};\r\n","// eslint-disable-next-line\r\nimport React from 'react';\r\nimport Dialogs from './Dialogs'\r\nimport {SendMessageActionCreator,OnMessageChangeActionCreator} from '../../Redux/DialogsReduce'\r\nimport {connect} from 'react-redux'\r\nimport {compose} from 'redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\n\r\n\r\nconst MapStateToProps = (state) =>{\r\n    return {\r\n        state:state.dialogsPage,\r\n        \r\n    }\r\n}\r\nconst MapDispatchToProps = (dispatch) =>{\r\n    return {\r\n\r\n        sendMessage:(text)=>{\r\n            dispatch(SendMessageActionCreator(text))\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(connect(MapStateToProps,MapDispatchToProps),withAuthRedirect)(Dialogs)\r\n"],"sourceRoot":""}